version: "3.8"

services:
  idfmi:
    build: ./app
    container_name: idfmi
    restart: always
    environment:
      - KEY_VAULT_NAME=${KEY_VAULT_NAME}
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      - AZURE_SUBSCRIPTION_ID=${AZURE_SUBSCRIPTION_ID}
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - MONGODB_DATABASE=IDFMI
      - MONGODB_USERNAME=kfupm_idfmi
      - MONGODB_PASSWORD=idfmi
      - MONGODB_HOSTNAME=mongodb
      - EMAIL_ADDRESS=idfmi255@gmail.com
      - EMAIL_PASSWORD=idfmi@123
      - SMTP_SERVER=smtp.gmail.com 
    networks:
      - db_network
      - web_network
    depends_on:
      - mongo
    ports:
      - 5000:5000
    volumes:
      - ./app/:/app/
# This is used to simulate the webcam, 
# should be used in linux virtual machine with access to webcam allowed      
#     devices: 
#       - /dev/video1:/dev/video0

  mongo:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    environment:
      - MONGO_INITDB_ROOT_USERNAME=kfupm_idfmi
      - MONGO_INITDB_ROOT_PASSWORD=idfmi
      - MONGO_INITDB_DATABASE=IDFMI
      - MONGODB_DATA_DIR=/data/db
      - MONGODB_LOG_DIR=/dev/null
    networks:
      - db_network
    ports:
      - 27017:27017
    volumes:
      - mongodbdata:/data/db

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    networks:
      - web_network
    depends_on:
      - idfmi
    ports:
      - 80:80

networks:
  db_network:
  web_network:

volumes:
  mongodbdata:
