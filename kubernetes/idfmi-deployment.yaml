apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Program Files\Kubernetes\Kompose\kompose.exe convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: idfmi
  name: idfmi
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: idfmi
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Program Files\Kubernetes\Kompose\kompose.exe convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/db_network: "true"
        io.kompose.network/web_network: "true"
        io.kompose.service: idfmi
    spec:
      containers:
      - env:
        - name: AZURE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: AZURE_CLIENT_ID
        - name: AZURE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: AZURE_CLIENT_SECRET
        - name: AZURE_SUBSCRIPTION_ID
          valueFrom:
            secretKeyRef:
              key: AZURE_SUBSCRIPTION_ID
        - name: AZURE_TENANT_ID
          valueFrom:
            secretKeyRef:
              key: AZURE_TENANT_ID
        - name: EMAIL_ADDRESS
          valueFrom:
            secretKeyRef:
              key: EMAIL_ADDRESS
        - name: EMAIL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: EMAIL_PASSWORD
        - name: KEY_VAULT_NAME
          valueFrom:
            secretKeyRef:
              key: KEY_VAULT_NAME
        - name: MONGODB_DATABASE
          value: IDFMI
        - name: MONGODB_HOSTNAME
          value: mongodb
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MONGODB_PASSWORD
        - name: MONGODB_USERNAME
          valueFrom:
            secretKeyRef:
              key: MONGODB_USERNAME
        - name: SMTP_SERVER
          value: smtp.gmail.com
        image: idfmi
        imagePullPolicy: ""
        name: idfmi
        ports:
        - containerPort: 5000
        resources: {}
        tty: true
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
